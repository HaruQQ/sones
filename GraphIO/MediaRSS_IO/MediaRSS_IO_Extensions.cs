/* 
 * MediaRSS_IO_Extensions
 * Achim 'ahzf' Friedland, 2010
 */

#region Usings

using System;
using System.Text;

using sones.GraphFS.DataStructures;

using sones.GraphDB.Structures;
using sones.GraphDB.Structures.Result;

using sones.Lib;

#endregion

namespace sones.GraphIO.MediaRSS
{

    /// <summary>
    /// Extension methods to transform a QueryResult and a DBObjectReadout into an
    /// application/json representation an vice versa.
    /// </summary>

    public static class MediaRSS_IO_Extensions
    {


        #region ToMediaRSS(this myQueryResult)

        public static String ToMediaRSS(this QueryResult myQueryResult,
                                        String myGalleryTitle       = "GreenIris",
                                        String myGalleryDescription = "Generated by a sones GraphDS graph traversal",
                                        String myGalleryCopyright   = null,
                                        String myGalleryLanguage    = "en-en")
        {

            var myStringBuilder = new StringBuilder();

            myStringBuilder.AppendLine("<channel>").AppendLine();

            #region Successful, or...

            if (myQueryResult.ResultType == ResultType.Successful)
            {

                if (myGalleryTitle != "")
                    myStringBuilder.Append("<title>").Append(myGalleryTitle).AppendLine("</title>");

                if (myGalleryDescription != "")
                    myStringBuilder.Append("<description>").Append(myGalleryDescription).AppendLine("</description>");

                if (!myGalleryCopyright.IsNullOrEmpty())
                    myStringBuilder.Append("<copyright>").Append(myGalleryCopyright).AppendLine("</copyright>");

                if (myGalleryLanguage != "")
                    myStringBuilder.Append("<language>").Append(myGalleryLanguage).AppendLine("</language>");

                myStringBuilder.AppendLine();

                //<!-- <logo url="pl_images/logo.gif" /> -->
                //<!-- <atom:icon>http://www.mywebsite.com/images/logo.gif</atom:icon> -->
                //<!-- <link>http://www.ahzf.de/cooliris.html</link> -->


                if (myQueryResult != null && myQueryResult.Results != null)
                    foreach (var _SelectionListElementResult in myQueryResult.Results)
                        if (_SelectionListElementResult != null && _SelectionListElementResult.Objects != null)
                            foreach (var _DBObjectReadout in _SelectionListElementResult.Objects)
                                if (_DBObjectReadout != null)
                                    myStringBuilder.Append(_DBObjectReadout.ToMediaRSS());

            }

            #endregion

            #region ...error(s) occurred!

            else
            {

                myStringBuilder.Append("<title>Error(s) occurred!</title>");

                myStringBuilder.AppendLine("<description>");

                if (myQueryResult != null && myQueryResult.Errors != null)
                    foreach (var _Error in myQueryResult.Errors)
                    {
                        myStringBuilder.AppendLine("ErrorCode: " + _Error.GetType().ToString());
                        myStringBuilder.AppendLine("ErrorDescription: " + _Error.ToString());
                    }

                myStringBuilder.AppendLine("</description>");

                myStringBuilder.Append("<language>en-en</language>");

            }

            #endregion

            myStringBuilder.AppendLine().AppendLine("</channel>");

            return myStringBuilder.ToString();

        }

        #endregion

        #region ToMediaRSS(this myDBObjectReadout)

        public static String ToMediaRSS(this DBObjectReadout myDBObjectReadout)
        {

            var myStringBuilder = new StringBuilder();

            var _UUID = myDBObjectReadout["UUID"];
            var _filename = myDBObjectReadout["Filename"];
            var _MIMEType = myDBObjectReadout["MIMEType"];
            var _title = myDBObjectReadout["Title"];
            var _description = myDBObjectReadout["Description"];

            if (_UUID != null && _filename != null && _MIMEType != null && _title != null && _description != null)
            {

                myStringBuilder.AppendLine("<item>");
                myStringBuilder.Append("<title>").Append(_title).AppendLine("</title>");
                myStringBuilder.Append("<link>/photos/bin/").Append(_UUID).Append("/").Append(FSConstants.DefaultEdition).AppendLine("</link>");
                myStringBuilder.Append("<media:thumbnail url=\"/photos/bin/").Append(_UUID).Append("/").Append("thumbnail").AppendLine("\" />");
                myStringBuilder.Append("<media:content   url=\"/photos/bin/").Append(_UUID).Append("/").Append(FSConstants.DefaultEdition).AppendLine("\" type=\"image/jpeg\" />");
                //myStringBuilder.Append("<media:content   url=\"/photos/bin/").Append(_uuid).Append("/").Append(FSConstants.DefaultEdition).AppendLine("\" type=\"text/html\" />");
                myStringBuilder.Append("<media:description>").Append(_description).AppendLine("</media:description>");
                myStringBuilder.AppendLine("</item>").AppendLine();

            }

            return myStringBuilder.ToString();

        }

        #endregion

        #region MediaRSSBuilder(myFunc)

        public static String MediaRSSBuilder(Action<StringBuilder> myFunc)
        {

            var _StringBuilder = new StringBuilder();


            _StringBuilder.AppendLine("<?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"yes\"?>");
            _StringBuilder.AppendLine("<rss version=\"2.0\" xmlns:media=\"http://search.yahoo.com/mrss/\" xmlns:atom=\"http://www.w3.org/2005/Atom\">");

            myFunc(_StringBuilder);

            _StringBuilder.AppendLine("</rss>").AppendLine();

            return _StringBuilder.ToString();

        }

        #endregion

    }

}
