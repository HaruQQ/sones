sones GraphDB 1.2 (developer) Changelog:

13.08.2010
- implemented AttributeUUID to be a UInt16
- Changed Exceptional.Success|Failed to extension methods in order to check if
Exceptional == null; null -> Failed - Add...
- Fixed bug 554 - Warning on ExecDBScript usage
- AGraphFS improvemens; Added MediaRSS_IO
- Added minimalistic IGraphDB... but still to much internal datastructures
involved!
- select, group and order undefined attributes
- Bugfix for tuple of tuple of tuple ... in where expression
- Some SetBackwardEdges enhancements
- Type independent concatenated functions
- Fixed .../gql?... CSS-bug
- Added IGraphIO, IGraphObjectsIO for I/O of FSObjects 
- Added Serialized_IO in order to replace IFastSerialize in the f...
- GraphDS Clean'ups
- Moved DBVertex, DBEdge, DBPath, ...  from GraphDSSharp to GraphDBInterface
- Moved public GraphDB stuff from GraphDB to GraphDBInterface
- Removed StorageEngine related stuff from GraphFSSession
- Small AutoDiscovery.cs bugfixes
- Lib bugfixes
- Bug fix in select for using graph
- Removed obsolete GraphFS projects
- JSON_IO bugfix
- Moved all ToXML/ToJSON/ToHTML/etc.pp into their own GraphIO solution
- Third part of Attributes on functions
- Added GraphIO projects
- Some AGraphFS and StorageEngines bugfixes

09.08.2010
- some cleanUp
- some ToString upgrades for Reference class
- in case of an abstract type edge the real type of the dbObjects is stored within the reference
- moved CreateAbstractTypeEnvironment method to ATestBase
- minor Rhom/Minus fix
- bugfixing in SelectResultManager
- fixed select * bug
- implement select # and select -
- some edge-serialisation tweaks
- removed TypeUUID from Edges
- Some QueryQL clean'ups... 
- Updated GraphFSEventHandlers/GraphDBEventHandlers
- GraphQL project to query DB via GQL
- some more GetAllEdgeDestinations integration
- Added possibility to subscribe to FSEvents from GraphDS 
- Implemented OnLoad/Loaded/Save/Saved/Remove/Removed within A...
- integrated GetAllEdgeDestinations in RemoveBackwardEdges method
- fixed weakReferences within Reference and DBObjectCache class +upgraded WeakReference test
- ToUNIXDate, FromUNIXDate and EXISTS function

03.08.2010
- fastSerializer refactoring and optimization
- Added LinqQuerable, LinqQueryProver for _very basic_ linq support without complex queries like WHERE-clauses 
and the selection of edges
  + var q = from website in GDB.LinqQuery<Website>("w") select website; // DBVertices
  + var q = from website in GDB.LinqQuery<Website>("w") select website.Name;  // Strings
  + var q = from website in GDB.LinqQuery<Website>("w") select new { newUUID = UUID };  // Anonymous types
- LinqExpressionVisitor class for parsing complex queries to GQL (or calling the appropriate methods on a 
graphdb) still missing
- Refactored SelectToObject => edges currently broken!!!
- Refactored GraphDS interfache for fluent queries and internal usage of DBVertex
- first usage of WeakReferences
- bugfixes
- GetContent refactoring
- added the system types DBVertex, DBEdge
- TransactionNodes, TruncateNode, UpdateNode refactored
- SettingNode refactored
- SelectNode refactored
- minor UUID.GetHashCode() and Equals improvments
- refactored architecture of DBObjectCache
- added ifdef for RunMT (currently runMT = false using mono)
- reimplemented Reference class
- added GetAllEdgeDestinations and GetAllEdgeDestinationsWeighted to IReference
- Changed all TYPE/TYPES statements to alternatively allow VERTEX/VERTICES, e.g. CREATE VERTEX User...
- GetContent refactored & Path bug fixed
- Refactored attribute assign nodes
- Add temporary attribute for non-persisting attributes
- Add DBObject.GetNeighbors(), DBObject.GetEdges(), ...
- Add DBObject.Traversal() method stub
- Add path class for traversal results
- Added DBEdge (like DBObject) as base of all edge types within GraphDSSharp
- Added new version of JIT (JavaScript InfoVis Toolkit) to GraphDSREST/resources/libs...
- Some *GraphFS refactoring...
- Multiple DBObject bugfixes
- Added Set<VertexType, EdgeType>
- Removed IXMLExport on ObjectLocator and INode in favor of a XML_IO_Extension to these classes
- Added robots.txt to REST
- Refactored Nodes DropIndex, Import
- added Reference class
- DescribeNode refactored
- implemented NotImplemented methods within UUIDIndex
- fixed bug on ouput of alter type add indices command
- Replaced TupleValue with TupleDefinition
- renamed Error_CouldAlterIndexOnType to Error_CouldNotAlterIndexOnType
- fixed bug on alter type create index for false type
- alter type define and undefine attributes for GraphDSSharp
- refactored dbIndices to support directoryObject as UUID-idx
- ExpressionNode refactored
- alter type define and undefine attributes
- REST, GEXF_IO Bugfixes
- Added DateTime_to_UNIXTimestamp and vice versa extension
- Updated WebShell to make use of jQuery-1.4.2.min
- alter type add or remove indices in GraphDSSharp 
- Added /resources handler to REST for all libs and sonoeslogos etc.pp
- Split all into even more JavaScript files
- Split WebShell.html into WebShell.html, WebShell.js (more or less JQuery.js + extensions) and goosh.js
- Refactored IDNode
- browser part of GEXF output
- Added jquery and protovis license files
- change for alter type command
- execute a list of instructions like (ADD ATTRIBUTES, DROP ATTRIBUTES)
- refactored LevelKey constructors + operators (now as functions)
- Changed GEXF stuff to be embedded resources
- Added GraphDSREST "/GEXFResources/{myResource}" handler
- Added GEXF_IO, GEXF_IO_Extensions stub
- Added /gexf?FROM+Website+w+SELECT+*+WHERE+w.Name+%3d+%27xkcd%27 handler to GraphDSREST
- Added (JavaScript) files of gexf4js to GraphDSREST/GEXF
- Added GexfExplorer1.0.swf FlashVisualization tool
- Fixed Bug_CouldNotDetermineJSON_ObjectUUID bug
- Some refactoring within GraphDBType and TypeAttribute... added IGetName interface
- Used IGetName interface within JSON_IO and XML_IO
- Refactor DeleteNode I
- ATypeNode and TypeList refactored
- Refactored CreateTypesNode
- Refactored CreateIndexNode
- AlterTypeNode refactored


31.07.2010
- bugfix in bplustree leafnode (reference to rightmost leaf was not updated correctly)

23.07.2010
- fixed: ExpressionGraph contained more edge information than selected

20.07.2010
- Changed result of PATH algorithm to containing NOT the starting element!
- fixed sonesCLI to display RAM usage and used CPU time on mono
- commented OnItemRemoved out because of mono trunk incompatiblity

19.07.2010
- Fixed Bug: Empty type information in path result
- Fixed Bug: Error in AND Operator with IN - Operation

15.07.2010
- Fixed Bug 497 (Crunchbase Path Search over Competitions throws exception)
- removed console output from BFS Graph Algorithm, breaks linux daemon

14.07.2010
- Fixed Bug_CouldNotDetermineJSON_ObjectUUID bug
- Some refactoring within GraphDBType and TypeAttribute... added IGetName interface
- Used IGetName interface within JSON_IO and XML_IO

08.07.2010
- Fixed IMPORT http:// bug; Added begin transaction to import
- new special type attributes MAXNUMBEROFCOPIES, MAXNUMBEROFREVISIONS, MAXREVISIONAGE, MINNUMBEROFCOPIES, NUMBEROFCOPIES, NUMBEROFREVISIONS, PARENTREVISIONS, MINNUMBEROFREVISIONS
- Return NotResolvedReferenceAttributeValues on function result
- Fix NullReference exception for not found Url in WebServerInterface definition
- Fixed error creation on SelectToObjectGraph
- IExtendableGrammar for aggregates and functions
- Add indices to grammar
- Changed dump to use SETOFUUIDS instead of updates
- Use slow index operation of InOperator ONLY for index keys of List/Set of base objects
- Fixed error message of delete with not existing attribute in where expression
- Fixed error message of update and insertOr* with not existing attribute in where expression
- Bugfix empty edge in select and expressiongraph for not existing backwardedge attribute (KeyNotFoundException)
- fixed bug in assignment of default attributes
- Import escape bugfix
- fixed bug: ambiguous attribute name on a type creation
- Renamed PandoraTypeMapper to GraphDBTypeMapper
- GraphQL simplifications, AGraphDSSharp improvements
- Dump changes ([TYPES ...], [INTO/TO ...])
- Fixed Bug 486: Wrong IDNode for BackwardEdge reference
- Dump error handling
- Added favicon to rest
- Allow file:\\\ as valid dump destination prefix 
- Changed GQL (optional currently)
 - TRUNCATE Nutzer -> TRUNCATE TYPE Nutzer
 - CREATE TYPE ... INDICES(...ON Nutzer) ->CREATE TYPE ... INDICES(...ON TYPE Nutzer)
 - CREATE INDEX ... ON Nutzer ->CREATE INDEX ... ON TYPE Nutzer
- Add line number for failed import
- Add warnings for obsolete usage of INDICES and TRUNCATE

