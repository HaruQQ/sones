[[documentation:graphql:gdml|Back to: Graph Data Manipulation Language Overview]]

====== UPDATE ======

The UPDATE statement manipulates attributes on certain database objects for a given type. The selection of those objects is realized via an optional [[documentation:database:querylanguage:expression|EXPRESSION]] clause. Otherwise every object of the given type will be changed.


If you want to know what is about the GraphDS and how it handles graphs you should check out the [[quickreference:fiveminuteguide|five minute guide]],

===== Syntax =====

UPDATE [[documentation:database:querylanguage:typewrapper:latest|type]] SET ( [[documentation:database:querylanguage:attributemanipulation:latest|attributeManipulation]] [, [[documentation:database:querylanguage:attributemanipulation:latest|attributeManipulation]] ] ) [ WHERE [[documentation:database:querylanguage:expression|expression]] ]

===== QueryResult =====
The QueryResult of the UPDATE query will contain
  * The executed query
  * The result: Successful | Failed
  * The duration in ms (the time which needs the query to be executed in the database)
  * The errors (if result is //Failed//)
  
sample json output:
<code json>
{
  "Query": "UPDATE UserProfile SET(Age = 10)",
  "Result": "Successful",
  "Duration": [
    171,
    "ms"
  ],
  "Results": [
    [
      {
        "Properties": {
          "VertexID": "-9223372036854775808",
          "VertexTypeID": "-9223372036854775797"
        }
      },
      {
        "Edges": []
      }
    ]
  ]
}
</code>

===== Examples =====

==== Given types ====

CREATE VERTEX TYPE User ATTRIBUTES (String Name, Int64 Age, SET<User> Friends, SET<User> Enemies, User Dad)

==== Setting an attribute ====
''UPDATE User SET( Age=25 ) WHERE Name='Alice'''

The attribute ''Age'' is set to 25 on the database object with ''Name'' "Alice".

----

''UPDATE User SET( Friends = SETOF( Name='Alice' ) ) WHERE Name='Bob'''

The database object with ''Name'' "Bob" is updated by assigning the attribute ''Friends'' (a set of ''User'' objects) with ''Name'' "Alice", the existing object in Friends of object "Bob" will be replaced.

----

''UPDATE User SET( Age=Age + 1 ) WHERE Name='Alice'''

The attribute ''Age'' of the database object with ''Name'' "Alice" is incremented by one.

----

''UPDATE User SET( Dad = REF(Name="Adam")) WHERE NAME = 'Kain'''

Sets a reference attribute.

==== Removing attributes ====
''UPDATE User SET ( REMOVE ATTRIBUTES (Age, Name) )''

Because there is no WHERE [[documentation:database:querylanguage:expression|EXPRESSION]] clause, the attributes ''Age'' and ''Name'' are removed from the db type and therefore on every database object of type ''User''.

==== Manipulation of LIST/SET attributes ====
''UPDATE User SET (Friends += SETOF( Name='Carol', Name='Dave' ) ) WHERE Name='Bob'''

The ''User'' objects with ''Name'' "Carol" and "Dave" are added to the ''Friends'' attribute of the database object with ''Name'' "Bob".

----

''UPDATE User SET( Friends -= SETOF ( Name='Dave' ) ) WHERE Name='Bob'''

The ''User'' object with ''Name'' "Dave" is removed from the ''Friends'' attribute of the database object with ''Name'' "Bob".

----

''UPDATE User SET ( Friends -= ( Name='Carol' ), Enemies += SETOF( Name='Eve' OR Name='Mallory' ) ) WHERE Name='Bob'''

Analogous to the previous example the ''User'' object with ''Name'' "Carol" is removed from the ''Friends'' attribute. Additionally the attribute ''Enemies'' is filled with ''User'' objects with ''Name'' "Eve" and "Mallory".

===== Return on success =====

  * The attributes that have been defined within the SET section
  * The [[documentation:datamodell:specialproperties|special properties]] with their current values
